{"version":3,"sources":["components/addsong/addsong.module.css","components/editsong/editsong.module.css","models/tunes.enum.ts","components/modal/modal.tsx","components/rating/rating.tsx","context/MongoContext.ts","Config.ts","components/addsong/addsong.tsx","components/findsong/findsong.tsx","helpers/user.ts","components/editsong/editsong.tsx","components/song/song.tsx","components/KTabCard.tsx","components/Loading.tsx","components/pagination/pagination.tsx","pages/Home.tsx","pages/LogOut.tsx","pages/LogIn.tsx","components/Navigation.tsx","App.tsx","reportWebVitals.js","index.tsx","components/modal/modal.module.css","components/song/song.module.css","components/rating/rating.module.css","components/pagination/pagination.module.css"],"names":["module","exports","Tunes","Modal","open","modalLabel","children","custom_modal","onClose","className","styles","modalContainer","onClick","e","target","modal","modal__head","modal__close","toolTips","Rating","title","rating","onChange","stars","useMemo","result","r","push","icon","faStar","rating__checked","id","rating__box","initialContext","app","client","undefined","user","setApp","setClient","setUser","MongoContext","React","createContext","Config","AddSong","NUMBER","state","useContext","titleInput","useRef","useEffect","current","focus","useState","setTitle","interpreter","setInterpreter","source","setSource","youtube","setYoutube","difficulty","setDifficulty","text","setText","onSubmit","preventDefault","trim","length","kTab","updated","Date","currentUser","db","collection","insertOne","then","catch","err","alert","addSong","name","ref","type","value","placeholder","FindSong","onSearch","query","setQuery","InputGroup","Form","Control","aria-label","Button","variant","apiKeyUser","console","log","process","apiKey","Realm","isReadOnly","identities","providerType","EditSong","toEditTitle","toEditInterpreter","toEditSource","toEditYoutube","toEditSongtext","toEditDifficulty","handleUpdate","a","updateOne","BSON","ObjectID","editSong","Song","song","viewText","split","map","line","startsWith","substring","join","handleDelete","window","confirm","deleteOne","_id","song_songtext","faGlobe","href","faVideo","song_buttons","KTabCard","ktab","onReload","edit","view","setOpen","handleClose","reload","ListGroup","Item","as","Loading","Spinner","animation","Pagination","currentPage","total","countPerPage","onChangePage","maxPage","Math","floor","pages","start","max","end","min","p","pagination","page","active","Home","kTabs","setKtabs","loading","setLoading","openAddModal","setOpenAddModal","searchText","setSearchText","setTotal","setPage","filter","setFilter","setReload","sortField","setSortField","rests","regex","RegExp","f","$regex","count","sort","args","skip","limit","callFunction","data","finally","Container","t","Label","Select","size","LogOut","navigate","useNavigate","logOut","logIn","Error","error","message","mongoClient","logout","userSchema","yup","shape","email","required","password","LogIn","navigage","values","credentials","emailPassword","initialValues","validationSchema","errors","touched","handleSubmit","handleChange","noValidate","Group","isValid","Feedback","Navigation","loggedIn","Navbar","bg","expand","Brand","Nav","Collapse","Text","profile","to","App","init","Provider","basename","path","element","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a973be09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addSong\":\"addsong_addSong__2UKIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSong\":\"editsong_editSong__3NsqR\"};","export enum Tunes {\n    NUMBER,\n    C_TUNE,\n    G_TUNE\n}","import { FC } from 'react'\nimport styles from './modal.module.css'\n\ntype ModalProps = {\n  open: boolean,\n  modalLabel: string,\n  children: any,\n  custom_modal?: string,\n  onClose: (reload: boolean) => void\n}\n\nconst Modal : FC<ModalProps> = ({open, modalLabel, children, custom_modal, onClose}) => {\n\n  const handleClose = (e: any) => {\n    if(e.target.className === 'modalContainer'){\n      onClose(false)\n    }\n    return null\n  }\n\n  if(open) {\n    return (\n      <div className={styles.modalContainer} onClick={handleClose}>\n        <div className= {`${styles.modal} ${custom_modal}`}>\n          <div className={styles.modal__head}>\n            <h2>{modalLabel}</h2>\n            <span className={styles.modal__close} onClick={() => onClose(false)}>x</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Modal","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FC, useMemo } from 'react'\nimport styles from './rating.module.css'\n\ntype Props = {\n    title: string,\n    rating?: number,\n    onChange?: (rating: number) => void\n}\n\nconst toolTips = [\n    'unknown',\n    'beginner',\n    'intermediate',\n    'advanced',\n]\n\nexport const Rating : FC<Props> = ({title, rating, onChange}) => {\n\n\n    const stars = useMemo(() => \n    { \n        const onClickStar = (id: number) => {\n            if (onChange) onChange(id)\n        }\n\n        const result = []\n        for(let r = 0; r < 3; r++) {\n            result.push(\n            <FontAwesomeIcon key={'rating-'+r} icon={faStar} className={`${rating && rating > r ? styles.rating__checked : ''}`} onClick={() => onClickStar(r+1)} />)\n        }\n        return result\n    }, [rating, onChange]\n    )\n\n    return (\n        <span title={toolTips[rating || 0]} className={styles.rating__box} >\n            {title}\n            {stars}\n      </span>\n    )\n}","import React from 'react'\n\n\nexport type ContextProps = {\n    app: Realm.App<globalThis.Realm.DefaultFunctionsFactory, any> | null,\n    client: globalThis.Realm.Services.MongoDB | undefined,\n    user: Realm.User | null,\n    setApp: any,\n    setClient: any,\n    setUser: any\n}\n\nconst initialContext: ContextProps = {\n    app: null,\n    client: undefined,\n    user: null,\n    setApp: () => {},\n    setClient: () => {},\n    setUser: () => {}\n}\n\nconst MongoContext = React.createContext<ContextProps>(initialContext)\n\nexport default MongoContext","import { Tunes } from \"./models/tunes.enum\";\n\nexport const Config = {\n    dbName: 'kontranik',\n    collection: 'ktabs',\n    pageSize: 10,\n    defaultTune: Tunes.NUMBER,\n}\n\n","import {FC, useContext, useEffect, useRef, useState} from 'react'\nimport styles from './addsong.module.css'\nimport Modal from './../modal/modal'\nimport { Rating } from '../rating/rating'\nimport MongoContext from '../../context/MongoContext'\nimport { KTab } from '../../models/KTab'\nimport { Config } from '../../Config'\n\n\ntype AddSongProps = {\n  onClose: (reload: boolean) => void,\n  open: boolean\n}\n\nconst AddSong : FC<AddSongProps> = ({onClose, open}) => {\n\n  const state = useContext(MongoContext);\n  const titleInput = useRef<any>(null);\n\n  useEffect(()=>{\n     // current property is refered to input element\n     if ( titleInput?.current ) titleInput.current.focus();\n  },[])\n\n  const [title, setTitle] = useState('')\n  const [interpreter, setInterpreter] = useState('')\n  const [source, setSource] = useState('')\n  const [youtube, setYoutube] = useState('')\n  const [difficulty, setDifficulty] = useState(0)\n  const [text, setText] = useState('')\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    if ( !title || title.trim().length === 0 ) {\n      alert('Enter title text');\n      return;\n    }\n    if ( !text || text.trim().length === 0 ) {\n      alert('Enter song text');\n      return;\n    }\n    const kTab: Partial<KTab> = {\n      title: title,\n      interpreter: interpreter.trim(),\n      source: source.trim(),\n      youtube: youtube.trim(),\n      text: text,\n      difficulty: difficulty,\n      updated: new Date()\n    }\n    if (state.client && state.app?.currentUser ) {\n      const rests = state.client?.db(Config.dbName).collection(Config.collection)\n      rests.insertOne(kTab)\n        .then (()=>{\n          onClose(true)\n        })\n        .catch ((err) => {\n          alert(err)\n          onClose(false)\n        })\n    }\n  }\n\n  return (\n    <Modal modalLabel='Add Kalimba Tabulature' onClose={onClose} open={open}>\n      <Rating title=\"Set difficulty: \" rating={difficulty} onChange={setDifficulty} />\n      <form onSubmit={handleSubmit} className={styles.addSong} name='addSong'>\n        <input \n          ref={titleInput}\n          type='text' \n          name='title' \n          onChange={(e) => setTitle(e.target.value)} \n          value={title}\n          placeholder='Enter title'/>\n        <input \n          type='text' \n          name='interpreter' \n          onChange={(e) => setInterpreter(e.target.value)} \n          value={interpreter}\n          placeholder='interpreter'/>\n        <textarea \n          onChange={(e) => setText(e.target.value)}\n          placeholder='Enter song text'\n          value={text} />\n\n        <input \n          type='url' \n          name='source' \n          onChange={(e) => setSource(e.target.value)} \n          value={source}\n          placeholder='source'/>\n        <input \n          type='url' \n          name='youtube' \n          onChange={(e) => setYoutube(e.target.value)} \n          value={youtube}\n          placeholder='youtube'/>\n        <button type='submit'>Save</button>\n      </form> \n    </Modal>\n  )\n}\n\nexport default AddSong","import { FC, useState } from \"react\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\n\ntype Props = {\n    onSearch: (query: string) => void,\n}\n\nexport const FindSong: FC<Props> = ({onSearch}) => {\n    const [query, setQuery] = useState('')\n\n    return (\n        <InputGroup className=\"mt-3\">\n            <Form.Control aria-label=\"search in title or interpreter\" placeholder=\"search in title or interpreter\" onChange={(e) => setQuery(e.target.value)} value={query}/>\n            <Button variant=\"outline-primary\" onClick={()=> { onSearch(query)}} >Find</Button>\n            <Button variant=\"outline-danger\" onClick={()=> { setQuery(''); onSearch('')}} >Clear</Button>\n        </InputGroup>\n    );\n}","\nimport * as Realm from 'realm-web'\n\nexport const apiKeyUser = () =>  {\n    console.log(process.env);\n    \n    const apiKey = process.env.REACT_APP_REALM_APIKEY_READALL;\n    if (!apiKey) {\n        throw new Error(\"Could not find a Realm Server API Key.\");\n    }\n    return Realm.Credentials.apiKey(apiKey);\n}\n\nexport const anonUser = () => {\n    return Realm.Credentials.anonymous()\n}\n\nexport const isReadOnly = (user: any) => {\n    return !user || user.identities[0].providerType === 'api-key'\n}\n","import Modal from \"../modal/modal\"\nimport {FC, useContext, useState} from 'react'\nimport styles from './editsong.module.css'\nimport { Rating } from \"../rating/rating\";\nimport { KTab } from \"../../models/KTab\";\nimport MongoContext from \"../../context/MongoContext\";\nimport { BSON } from \"realm-web\";\nimport { Config } from \"../../Config\";\n\ntype Props =  {\n    open: boolean,\n    onClose: (reload: boolean) => void,\n    toEditTitle: string,\n    toEditInterpreter: string,\n    toEditSource: string,\n    toEditYoutube: string,\n    toEditSongtext: string,\n    toEditDifficulty: number\n    id: string,\n}\n\nconst EditSong: FC<Props> = ({open, onClose, toEditTitle, toEditInterpreter, toEditSource, toEditYoutube, toEditSongtext, toEditDifficulty, id}) => {\n\n  const state = useContext(MongoContext);\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [interpreter, setInterpreter] = useState(toEditInterpreter)\n  const [source, setSource] = useState(toEditSource)\n  const [youtube, setYoutube] = useState(toEditYoutube)\n  const [text, setText] = useState(toEditSongtext)\n  const [difficulty, setDifficulty] = useState(toEditDifficulty)\n\n  /* function to update firestore */\n  const handleUpdate = async (e: any) => {\n    e.preventDefault()\n\n    if ( !title || title.trim().length === 0 ) {\n      alert('Enter title text');\n      return;\n    }\n    if ( !text || text.trim().length === 0 ) {\n      alert('Enter song text');\n      return;\n    }\n    \n    const kTab: Partial<KTab> = {\n      title: title,\n      interpreter: interpreter,\n      source: source,\n      youtube: youtube,\n      text: text,\n      difficulty: difficulty,\n      updated: new Date()\n    }\n    \n    if (state.client && state.app?.currentUser ) {\n      const rests = state.client?.db(Config.dbName).collection(Config.collection)\n      rests.updateOne({\"_id\": new BSON.ObjectID(id)}, kTab)\n        .then (()=>{\n          onClose(true)\n        })\n        .catch ((err) => {\n          alert(err)\n          onClose(false)\n        })\n    }\n    \n  }\n\n  return (\n    <Modal modalLabel='Edit Kalimba Tab' onClose={onClose} open={open}>\n      <Rating title=\"Set difficulty: \" rating={difficulty} onChange={setDifficulty} />\n      <form onSubmit={handleUpdate} className={styles.editSong}>\n        <input \n          type='text' \n          name='title' \n          placeholder=\"title\"\n          onChange={(e) => setTitle(e.target.value)} \n          value={title}/>\n        <input \n          type='text' \n          name='interpreter' \n          placeholder=\"interpreter\"\n          onChange={(e) => setInterpreter(e.target.value)} \n          value={interpreter}/>\n          \n        <textarea \n        onChange={(e) => setText(e.target.value)}\n        placeholder='Enter song text'\n        value={text}>{text}</textarea>\n\n        <input \n          type='url' \n          name='source' \n          placeholder=\"source\"\n          onChange={(e) => setSource(e.target.value)} \n          value={source}/>\n        <input \n          type='url' \n          name='youtube' \n          placeholder=\"youtube link\"\n          onChange={(e) => setYoutube(e.target.value)} \n          value={youtube}/>\n\n        <button type='submit'>Save</button>\n      </form> \n    </Modal>\n  )\n}\n\nexport default EditSong","import { faGlobe, faVideo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { FC, useContext, useMemo } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport { BSON } from \"realm-web\"\nimport { Config } from \"../../Config\"\nimport { KTab } from \"../../models/KTab\"\nimport MongoContext from \"../../context/MongoContext\"\nimport { isReadOnly } from \"../../helpers/user\"\nimport { Rating } from \"../rating/rating\"\nimport Modal from \"./../modal/modal\"\nimport styles from './song.module.css'\n\ntype Props = {\n    onClose: (reload: boolean) => void,\n    open: boolean,\n    song: KTab\n}\n\nconst Song:FC<Props> = ({onClose, open, song}) => {\n  const state = useContext(MongoContext);\n\n  /* function to remove text line markers */\n  const viewText = useMemo<string>(\n    () => {\n    return song.text.split(\"\\n\").map((line) => line.startsWith(\">\") ? line.substring(1, line.length) : line ).join(\"\\n\")\n    }, [song.text])\n\n  /* function to delete a document from mongodb */ \n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure to delete this song?')) return\n    \n    if (state.client && state.app?.currentUser ) {\n      const rests = state.client?.db(Config.dbName).collection(Config.collection)\n      rests.deleteOne({_id: new BSON.ObjectID(song._id)})\n        .then(\n          () => onClose(true)\n        )\n        .catch((err) => alert(err))\n    }\n  }\n\n  return (\n    <Modal modalLabel={song.title} onClose={onClose} open={open}>\n      <div title=\"Interpreter\" className={styles.interpreter}>{ song.interpreter.length > 0 ? song.interpreter : 'unknown' }</div>\n      <Rating title=\"Difficulty: \" rating={song.difficulty} />\n      <div className={styles.song}>\n        <div className={styles.song_songtext}>{viewText}</div>\n        <div>\n          { song.source.length > 0 ? <div><FontAwesomeIcon icon={faGlobe} /> <a href={song.source}>{song.source}</a></div> : ''}\n          { song.youtube.length > 0 ? <div><FontAwesomeIcon icon={faVideo} /> <a href={song.youtube}>{song.youtube}</a></div> : ''}\n        </div>\n        <div className={styles.song_buttons}>\n        { !isReadOnly(state.user) ? <>\n            <Button variant=\"outline-danger\" onClick={handleDelete}>Delete</Button> \n          </>\n          : '' }\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default Song","import React, { FC, useState } from 'react';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport { KTab } from '../models/KTab';\nimport { isReadOnly } from '../helpers/user';\nimport EditSong from './editsong/editsong';\nimport { Rating } from './rating/rating';\nimport Song from './song/song';\n\ntype Props = {\n    onReload: () => void,\n    ktab: KTab,\n    user: Realm.User | null\n}\nconst KTabCard: FC<Props> = ({ktab, user, onReload}) => {\n\n    const [open, setOpen] = useState({edit:false, view:false})\n\n    const handleClose = (reload: boolean) => {\n        setOpen({edit:false, view:false})\n        if (reload) onReload()\n      }\n    \n    return (\n        <>\n        <ListGroup.Item\n            as=\"li\"\n            className=\"align-items-start\" >\n                <div className='d-flex justify-content-between'>\n                    <div>\n                        <div className='font-weight-bolder'>{ktab.title}</div>\n                        { ktab.interpreter.length > 0 ? <div className=\"text-muted font-italic\">{ktab.interpreter}</div> : '' }\n                    </div>\n                    <div>\n                        <Rating title='' rating={ktab.difficulty} />\n                        { !isReadOnly(user) ? <Button variant=\"primary\" onClick={() => setOpen({...open, view: false, edit: true})} className=\"ms-3\">Edit</Button> : '' }\n                        <Button variant=\"success\" onClick={() => setOpen({...open, view: true, edit: false})} className=\"ms-3\">View</Button> \n                    </div>\n                </div>\n\n                \n\n        </ListGroup.Item>\n            {open.view &&\n                <Song\n                    onClose={handleClose} \n                    song={ktab} \n                    open={open.view} />\n            }\n            {open.edit &&\n                <EditSong\n                    onClose={handleClose} \n                    toEditTitle={ktab.title}\n                    toEditInterpreter={ktab.interpreter}\n                    toEditSongtext={ktab.text}\n                    toEditSource={ktab.source}\n                    toEditYoutube={ktab.youtube}\n                    toEditDifficulty={ktab.difficulty}\n                    id={ktab._id}\n                    open={open.edit} />\n            }\n        </>\n    )\n}\n\nexport default KTabCard","import React from \"react\"\nimport { Spinner } from \"react-bootstrap\"\n\n\nconst Loading = () => {\n    return (\n        <>\n        <Spinner animation=\"border\" variant=\"primary\">\n            <span className=\"sr-only\"></span>\n        </Spinner> Loading...\n        </>\n    )\n}\n\nexport default Loading","import { FC, useMemo } from \"react\";\nimport styles from './pagination.module.css';\n\ntype Props = {\n    currentPage: number,\n    total: number,\n    countPerPage: number,\n    onChangePage: (page: number) => void,\n}\nexport const Pagination: FC<Props> = ({currentPage, total, countPerPage, onChangePage}) => {\n\n    const maxPage = useMemo(() => Math.floor(total / countPerPage), [total, countPerPage])\n\n    const pages = useMemo(() => \n        { \n            const result = []\n            const start = Math.max(0, currentPage - 3)\n            const end = Math.min(maxPage, currentPage + 3)\n            \n        for (let p = start; p <= end; p++) {\n            result.push(p)\n        }\n        return result\n    }, [maxPage, currentPage]\n    )\n\n\n    return (\n        <>\n        { total > 0 ? \n        <div className={styles.pagination}>\n            { currentPage > 0 ? <span onClick={() => onChangePage(currentPage-1)}>&laquo;</span> : '' }\n\n            { pages.map((page) =>\n                 <span key={'page-' + page} \n                    className={`${currentPage === page ? styles.active : ''}`}\n                    onClick={() => onChangePage(page)}\n                    >{page+1}</span> )\n            }\n\n            { currentPage < maxPage ? <span onClick={() => onChangePage(currentPage+1)}>&raquo;</span> : '' }\n        </div> \n        : '' }\n        </>\n    )\n}","import React, { useContext } from 'react'\nimport { useEffect, useState } from 'react'\nimport { Button, Container, Form, ListGroup } from 'react-bootstrap'\nimport AddSong from '../components/addsong/addsong'\nimport { FindSong } from '../components/findsong/findsong'\nimport KTabCard from '../components/KTabCard'\nimport Loading from '../components/Loading'\nimport { Pagination } from '../components/pagination/pagination'\nimport { Config } from '../Config'\nimport { KTab } from '../models/KTab'\nimport MongoContext from '../context/MongoContext'\nimport { isReadOnly } from '../helpers/user'\n\nconst caseInsensitive = 'i';\n\ntype FunctionArgs = {\n    filter: any,\n    sort: any,\n    limit: number,\n    skip: number\n}\ntype FunctionResult = {\n    arg: any,\n    data: KTab[]\n}\n\nfunction Home () {\n    const state = useContext(MongoContext);\n    const [kTabs, setKtabs] = useState<KTab[]>([])\n    const [loading, setLoading] = useState(true)\n    const [openAddModal, setOpenAddModal] = useState(false)\n    const [searchText, setSearchText] = useState('')\n    const [total, setTotal ] = useState(0)\n    const [page, setPage ] = useState(0)\n    const [filter, setFilter] = useState<any>({})\n    const [reload, setReload] = useState(false)\n    const [sortField, setSortField] = useState('title')\n    \n\n    useEffect(() => {\n        if ( state.client) {\n            const rests = state.client.db(Config.dbName).collection(Config.collection)\n            const regex = new RegExp(searchText,caseInsensitive) \n            \n            let f = searchText.trim().length > 0 ? { \"$or\":  [ { title: {$regex: regex}}, { interpreter: {$regex: regex}}]} : {}\n           \n            setFilter(f)\n            rests.count(f)\n                .then((result) => setTotal(result))\n                .catch((err) => console.log(err))\n        }\n    }, [searchText, state, reload])\n\n    useEffect(() => {\n        if ( state.user) {\n            setLoading(true)\n            let sort = {}\n            switch (sortField) {\n                case 'title':\n                    sort = {title: 1, _id: 1}\n                    break;\n                case 'interpreter':\n                    sort = {interpreter: 1, title: 1, _id: 1}\n                    break;\n                case 'difficulty':\n                    sort = {difficulty: 1, title: 1, _id: 1}\n                    break;\n                case 'updated':\n                    sort = {updated: -1, _id: 1}\n                    break;\n                case 'difficulty_desc':\n                    sort = {difficulty: -1, title: 1, _id: 1}\n                    break;\n                default:\n                    sort = {title: 1, _id: 1}\n                    break;\n            }\n          \n            const args: FunctionArgs = { skip: page * Config.pageSize, limit: Config.pageSize, filter: filter, sort: sort }\n            state.user?.callFunction('skip_limit', args)\n                .then((result) => {\n                    setKtabs((result as FunctionResult).data)\n                })\n                .catch((err) => console.log(err))\n                .finally(() => setLoading(false))\n        }\n    }, [state.user, filter, page, reload, sortField])\n\n    const handleSearch = (t: string) => {\n        setPage(0)\n        setSearchText(t);\n    }\n\n    return (\n        <Container>\n            <FindSong onSearch={handleSearch} />\n            {loading && (\n                <div className=\"text-center\">\n                    <Loading />\n                </div>\n            )}\n            \n                <Container className='d-flex justify-content-between mt-3'>\n                    <div>Total: {total}</div>\n                    <div className='d-flex'>\n                        <Form.Label>sort by </Form.Label>\n                        <Form.Select aria-label=\"sort selection\" size=\"sm\" onChange={(e)=> setSortField(e.target.value)}>\n                            <option value=\"title\">title</option>\n                            <option value=\"interpreter\">interpreter</option>\n                            <option value=\"updated\">update time</option>\n                            <option value=\"difficulty\">difficulty</option>\n                            <option value=\"difficulty_desc\">difficulty desc</option>\n                        </Form.Select>\n                        { !isReadOnly(state.user) ? \n                            <Button size=\"sm\" className='ms-3' variant='outline-dark' onClick={() => setOpenAddModal(true)} >\n                                Add song\n                            </Button> \n                        : '' }\n                    </div>\n                </Container> \n               \n\n            <ListGroup as=\"ul\" className='mt-3 mb-3'>\n                {kTabs.map((ktab) => (\n                    <KTabCard key={ktab._id} ktab={ktab} user={state.user} onReload={() => setReload(!reload)} />\n                ))}\n            </ListGroup>\n            <Pagination currentPage={page} total={total} countPerPage={Config.pageSize} onChangePage={setPage}/>\n\n            {   openAddModal &&\n                <AddSong onClose={(r) => { setOpenAddModal(false); if (r) setReload(!reload)}} open={openAddModal}/>\n            }\n        </Container>\n    )\n}\n\nexport default Home","import React, { useContext } from \"react\"\nimport { useEffect } from \"react\"\nimport Loading from \"../components/Loading\"\nimport { useNavigate } from \"react-router-dom\"\nimport MongoContext from \"../context/MongoContext\"\nimport { apiKeyUser, isReadOnly } from \"../helpers/user\"\n\nfunction LogOut () {\n    const state = useContext(MongoContext);\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (isReadOnly(state.user)) {\n            navigate('/')\n        }\n    }, [navigate, state.user])\n\n    useEffect(() => {\n        async function logout () {\n            console.log(\"logout\")\n            if (state.app?.currentUser) {\n                await state.app.currentUser.logOut()\n                \n                // login apiKey user\n                try {\n                    const user = await state.app.logIn(apiKeyUser());\n                    console.log(\"Successfully logged in!\", user.id);\n                    state.setUser(user);\n                  } catch (err) {\n                    if (err instanceof Error) {\n                      console.error(\"Failed to log in\", err.message);\n                    }\n                  }\n                //login anon user\n                //state.setUser(await state.app.logIn(anonUser()))\n\n                //set new client\n                state.setClient(state.app.currentUser?.mongoClient('mongodb-atlas'));\n            }\n        }\n\n        logout()\n    }, [state.app, state.setClient, state.setUser, state])\n\n    return (\n        <Loading />\n    )\n}\n\nexport default LogOut","import React, { useContext } from \"react\"\nimport { Formik } from 'formik'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport * as Realm from 'realm-web'\nimport { useEffect, useState } from 'react'\nimport Loading from '../components/Loading'\nimport MongoContext from \"../context/MongoContext\"\nimport { useNavigate } from \"react-router-dom\"\nimport { isReadOnly } from \"../helpers/user\"\n\nconst userSchema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required()\n})\n\nfunction LogIn () {\n    const state = useContext(MongoContext);\n    const navigage = useNavigate()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (!isReadOnly(state.user)) {\n            navigage('/')\n        }\n    }, [navigage, state.user])\n\n    async function submitHandler (values: any) {\n        setLoading(true)\n\n        //login user and redirect to home\n        const credentials = Realm.Credentials.emailPassword(values.email, values.password);\n        if (state.app) {\n            console.log('login...');\n            \n            state.app.logIn(credentials)\n                .then((user) => {\n                    state.setUser(user)\n                    console.log('logged in...');\n                })\n                .catch((err) => alert(err))\n        } else {\n            state.setUser(null)\n        }\n        setLoading(false)\n    }\n\n    return (\n        <Container className='d-flex justify-content-center mt-3'>\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: ''\n                }}\n\n                validationSchema={userSchema}\n\n                onSubmit={submitHandler}\n            >\n                {({errors, touched, handleSubmit, values, handleChange}) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        {loading && <Loading />}\n                        {!loading && (<div>\n                            <h1>Login</h1>\n                            <Form.Group>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" name=\"email\" value={values.email} onChange={handleChange} \n                                isValid={touched.email && !errors.email} />\n                                <Form.Control.Feedback>{errors.email}</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={values.password} onChange={handleChange} \n                                isValid={touched.password && !errors.password} />\n                                <Form.Control.Feedback>{errors.password}</Form.Control.Feedback>\n                            </Form.Group>\n                            <div className=\"text-center mt-2\">\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                            </div>\n                        </div>)}\n                    </Form>\n                )}\n            </Formik>\n        </Container>\n    )\n}\n\nexport default LogIn","import React, { FC, useMemo } from \"react\"\nimport { Nav, Navbar } from \"react-bootstrap\"\nimport { Link, Outlet } from \"react-router-dom\"\nimport { isReadOnly } from \"../helpers/user\"\n\ntype Props = {\n    user: Realm.User | null\n}\nconst Navigation: FC<Props> = ({user}) => {\n    const loggedIn = useMemo(() => !isReadOnly(user), [user]) \n    \n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Tnx Kalimba Tabs</Navbar.Brand>\n\n                <Nav className=\"ms-auto\">\n                    { loggedIn ? \n                        <Navbar.Collapse className=\"justify-content-end\">                            \n                            <Navbar.Text>\n                                {user?.profile.name || user?.profile.email}\n                            </Navbar.Text>\n                            <Link to=\"/logout\" className=\"mx-2\">Log out</Link>\n                        </Navbar.Collapse> \n                        : <Link to=\"/signin\" className=\"mx-2\">Sign In</Link>\n                    }\n                </Nav>\n\n            </Navbar>\n            <Outlet />\n        </>\n    )\n}\n\nexport default Navigation","import React from \"react\"\nimport { BrowserRouter, HashRouter, Navigate, Route, Router, Routes } from 'react-router-dom';\nimport Home from \"./pages/Home\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MongoContext from './context/MongoContext'\nimport { useEffect, useState } from \"react\"\nimport * as Realm from 'realm-web'\n\nimport LogOut from \"./pages/LogOut\"\nimport LogIn from \"./pages/LogIn\";\nimport Navigation from \"./components/Navigation\";\nimport { apiKeyUser } from \"./helpers/user\";\n\nfunction App() {\n  const [client, setClient] = useState<globalThis.Realm.Services.MongoDB | undefined>()\n  const [user, setUser] = useState<Realm.User | null>(null)\n  const [app, setApp] = useState(new Realm.App({id: process.env.REACT_APP_REALM_APP_ID || ''}))\n\n  useEffect(() => {\n    async function init () {\n      if (!user) {\n        setUser(app.currentUser ? app.currentUser : await app.logIn(apiKeyUser()))\n      }\n\n      if (!client) {\n        setClient(app?.currentUser?.mongoClient('mongodb-atlas'))\n      }\n    }\n\n    init();\n  }, [app, client, user])\n\n  return (\n    <>\n      <MongoContext.Provider value={{app, client, user, setClient, setUser, setApp}}>\n        <BrowserRouter basename={process.env.PUBLIC_URL || \"./\"}>\n            <Routes>\n              <Route path=\"/\" element={<Navigation user={user}/>}>\n                <Route index element={<Home />} />\n                <Route path=\"/signin\" element={<LogIn />} />\n                <Route path=\"/logout\" element={<LogOut />} />                \n              </Route>\n              <Route path=\"/*\" element={<Navigate to=\"/KalimbaTabs-static\" />}  /> {/* navigate to default route if no url matched */}\n            </Routes>\n          </BrowserRouter>\n      </MongoContext.Provider>\n      \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modal_modalContainer__njSGn\",\"modal\":\"modal_modal__1zCPQ\",\"modal__head\":\"modal_modal__head__2A6uI\",\"modal__close\":\"modal_modal__close__39gZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"song\":\"song_song__3UfjZ\",\"interpreter\":\"song_interpreter__2aum8\",\"song_songtext\":\"song_song_songtext__nBJBj\",\"song_buttons\":\"song_song_buttons__22HKA\",\"song__deleteButton\":\"song_song__deleteButton__1lnj0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating__checked\":\"rating_rating__checked__3Y5gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3nFKa\",\"disabled\":\"pagination_disabled__1WPUm\",\"active\":\"pagination_active__HNOaS\"};"],"sourceRoot":""}