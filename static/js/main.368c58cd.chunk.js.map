{"version":3,"sources":["components/addsong/addsong.module.css","components/editsong/editsong.module.css","models/tunes.enum.ts","components/modal/modal.tsx","components/rating/rating.tsx","context/MongoContext.ts","Config.ts","components/addsong/addsong.tsx","components/findsong/findsong.tsx","components/editsong/editsong.tsx","components/song/song.tsx","components/KTabCard.tsx","components/Loading.tsx","components/pagination/pagination.tsx","helpers/user.ts","pages/Home.tsx","pages/LogIn.tsx","components/Navigation.tsx","App.tsx","reportWebVitals.js","index.tsx","components/modal/modal.module.css","components/song/song.module.css","components/rating/rating.module.css","components/pagination/pagination.module.css"],"names":["module","exports","Tunes","Modal","open","modalLabel","children","custom_modal","onClose","className","styles","modalContainer","onClick","e","target","modal","modal__head","modal__close","toolTips","Rating","title","rating","onChange","stars","useMemo","result","r","push","icon","faStar","rating__checked","id","rating__box","initialContext","app","user","setApp","setUser","MongoContext","React","createContext","Config","AddSong","NUMBER","state","useContext","titleInput","useRef","useEffect","current","focus","useState","setTitle","interpreter","setInterpreter","source","setSource","youtube","setYoutube","difficulty","setDifficulty","text","setText","onSubmit","preventDefault","trim","length","kTab","updated","Date","currentUser","isLoggedIn","mongoClient","db","collection","insertOne","then","catch","err","alert","addSong","name","ref","type","value","placeholder","FindSong","onSearch","query","setQuery","InputGroup","Form","Control","aria-label","Button","variant","EditSong","toEditTitle","toEditInterpreter","toEditSource","toEditYoutube","toEditSongtext","toEditDifficulty","handleUpdate","a","rests","console","log","updateOne","BSON","ObjectID","editSong","Song","song","readOnly","viewText","split","map","line","startsWith","substring","join","handleDelete","window","confirm","deleteOne","_id","song_songtext","faGlobe","href","faVideo","song_buttons","KTabCard","ktab","onReload","edit","view","setOpen","handleClose","reload","ListGroup","Item","as","style","cursor","width","alignItems","height","Loading","Spinner","animation","Pagination","currentPage","total","countPerPage","onChangePage","maxPage","Math","floor","pages","start","max","end","min","p","pagination","page","active","apiKeyUser","apiKey","process","Realm","isReadOnly","profile","Home","kTabs","setKtabs","loading","setLoading","openAddModal","setOpenAddModal","searchText","setSearchText","setTotal","setPage","filter","setFilter","setReload","sortField","setSortField","regex","RegExp","f","$regex","count","sort","args","skip","limit","callFunction","data","finally","Container","t","Label","Select","size","userSchema","yup","shape","email","required","password","LogIn","onLogin","values","logOut","credentials","emailPassword","logIn","initialValues","validationSchema","errors","touched","handleSubmit","handleChange","noValidate","Group","isValid","Feedback","Navigation","showLogin","setShowLogin","Navbar","bg","expand","Brand","Nav","Link","Text","App","init","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.368c58cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addSong\":\"addsong_addSong__2UKIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSong\":\"editsong_editSong__3NsqR\"};","export enum Tunes {\n    NUMBER,\n    C_TUNE,\n    G_TUNE\n}","import { FC } from 'react'\nimport styles from './modal.module.css'\n\ntype ModalProps = {\n  open: boolean,\n  modalLabel: string,\n  children: any,\n  custom_modal?: string,\n  onClose: (reload: boolean) => void\n}\n\nconst Modal : FC<ModalProps> = ({open, modalLabel, children, custom_modal, onClose}) => {\n\n  const handleClose = (e: any) => {\n    if(e.target.className === 'modalContainer'){\n      onClose(false)\n    }\n    return null\n  }\n\n  if(open) {\n    return (\n      <div className={styles.modalContainer} onClick={handleClose}>\n        <div className= {`${styles.modal} ${custom_modal}`}>\n          <div className={styles.modal__head}>\n            <h2>{modalLabel}</h2>\n            <span className={styles.modal__close} onClick={() => onClose(false)}>x</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Modal","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FC, useMemo } from 'react'\nimport styles from './rating.module.css'\n\ntype Props = {\n    title: string,\n    rating?: number,\n    onChange?: (rating: number) => void\n}\n\nconst toolTips = [\n    'unknown',\n    'beginner',\n    'intermediate',\n    'advanced',\n]\n\nexport const Rating : FC<Props> = ({title, rating, onChange}) => {\n\n\n    const stars = useMemo(() => \n    { \n        const onClickStar = (id: number) => {\n            if (onChange) onChange(id)\n        }\n\n        const result = []\n        for(let r = 0; r < 3; r++) {\n            result.push(\n            <FontAwesomeIcon key={'rating-'+r} icon={faStar} className={`${rating && rating > r ? styles.rating__checked : ''}`} onClick={() => onClickStar(r+1)} />)\n        }\n        return result\n    }, [rating, onChange]\n    )\n\n    return (\n        <span title={toolTips[rating || 0]} className={styles.rating__box} >\n            {title}\n            {stars}\n      </span>\n    )\n}","import React from 'react'\n\n\nexport type ContextProps = {\n    app: Realm.App<globalThis.Realm.DefaultFunctionsFactory, any> | null,\n    user: Realm.User | null,\n    setApp: any,\n    setUser: any\n}\n\nconst initialContext: ContextProps = {\n    app: null,\n    user: null,\n    setApp: () => {},\n    setUser: () => {}\n}\n\nconst MongoContext = React.createContext<ContextProps>(initialContext)\n\nexport default MongoContext","import { Tunes } from \"./models/tunes.enum\";\n\nexport const Config = {\n    clustername: 'mongodb-atlas',\n    dbName: 'kontranik',\n    collection: 'ktabs',\n    pageSize: 10,\n    defaultTune: Tunes.NUMBER,\n}\n\n","import {FC, useContext, useEffect, useRef, useState} from 'react'\nimport styles from './addsong.module.css'\nimport Modal from './../modal/modal'\nimport { Rating } from '../rating/rating'\nimport MongoContext from '../../context/MongoContext'\nimport { KTab } from '../../models/KTab'\nimport { Config } from '../../Config'\n\n\ntype AddSongProps = {\n  onClose: (reload: boolean) => void,\n  open: boolean\n}\n\nconst AddSong : FC<AddSongProps> = ({onClose, open}) => {\n\n  const state = useContext(MongoContext);\n  const titleInput = useRef<any>(null);\n\n  useEffect(()=>{\n     // current property is refered to input element\n     if ( titleInput?.current ) titleInput.current.focus();\n  },[])\n\n  const [title, setTitle] = useState('')\n  const [interpreter, setInterpreter] = useState('')\n  const [source, setSource] = useState('')\n  const [youtube, setYoutube] = useState('')\n  const [difficulty, setDifficulty] = useState(0)\n  const [text, setText] = useState('')\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    if ( !title || title.trim().length === 0 ) {\n      alert('Enter title text');\n      return;\n    }\n    if ( !text || text.trim().length === 0 ) {\n      alert('Enter song text');\n      return;\n    }\n    const kTab: Partial<KTab> = {\n      title: title,\n      interpreter: interpreter.trim(),\n      source: source.trim(),\n      youtube: youtube.trim(),\n      text: text,\n      difficulty: difficulty,\n      updated: new Date()\n    }\n    if ( state.app?.currentUser?.isLoggedIn ) {\n      const rests = state.app?.currentUser?.mongoClient(Config.clustername)?.db(Config.dbName).collection(Config.collection)\n      rests.insertOne(kTab)\n        .then (()=>{\n          onClose(true)\n        })\n        .catch ((err) => {\n          alert(err)\n          onClose(false)\n        })\n    }\n  }\n\n  return (\n    <Modal modalLabel='Add Kalimba Tabulature' onClose={onClose} open={open}>\n      <Rating title=\"Set difficulty: \" rating={difficulty} onChange={setDifficulty} />\n      <form onSubmit={handleSubmit} className={styles.addSong} name='addSong'>\n        <input \n          ref={titleInput}\n          type='text' \n          name='title' \n          onChange={(e) => setTitle(e.target.value)} \n          value={title}\n          placeholder='Enter title'/>\n        <input \n          type='text' \n          name='interpreter' \n          onChange={(e) => setInterpreter(e.target.value)} \n          value={interpreter}\n          placeholder='interpreter'/>\n        <textarea \n          onChange={(e) => setText(e.target.value)}\n          placeholder='Enter song text'\n          value={text} />\n\n        <input \n          type='url' \n          name='source' \n          onChange={(e) => setSource(e.target.value)} \n          value={source}\n          placeholder='source'/>\n        <input \n          type='url' \n          name='youtube' \n          onChange={(e) => setYoutube(e.target.value)} \n          value={youtube}\n          placeholder='youtube'/>\n        <button type='submit'>Save</button>\n      </form> \n    </Modal>\n  )\n}\n\nexport default AddSong","import { FC, useState } from \"react\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\n\ntype Props = {\n    onSearch: (query: string) => void,\n}\n\nexport const FindSong: FC<Props> = ({onSearch}) => {\n    const [query, setQuery] = useState('')\n\n    return (\n        <InputGroup className=\"mt-3\">\n            <Form.Control aria-label=\"search in title or interpreter\" placeholder=\"search in title or interpreter\" onChange={(e) => setQuery(e.target.value)} value={query}/>\n            <Button variant=\"outline-primary\" onClick={()=> { onSearch(query)}} >Find</Button>\n            <Button variant=\"outline-danger\" onClick={()=> { setQuery(''); onSearch('')}} >Clear</Button>\n        </InputGroup>\n    );\n}","import Modal from \"../modal/modal\"\nimport {FC, useContext, useState} from 'react'\nimport styles from './editsong.module.css'\nimport { Rating } from \"../rating/rating\";\nimport { KTab } from \"../../models/KTab\";\nimport MongoContext from \"../../context/MongoContext\";\nimport { BSON } from \"realm-web\";\nimport { Config } from \"../../Config\";\n\ntype Props =  {\n    open: boolean,\n    onClose: (reload: boolean) => void,\n    toEditTitle: string,\n    toEditInterpreter: string,\n    toEditSource: string,\n    toEditYoutube: string,\n    toEditSongtext: string,\n    toEditDifficulty: number\n    id: string,\n}\n\nconst EditSong: FC<Props> = ({open, onClose, toEditTitle, toEditInterpreter, toEditSource, toEditYoutube, toEditSongtext, toEditDifficulty, id}) => {\n\n  const state = useContext(MongoContext);\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [interpreter, setInterpreter] = useState(toEditInterpreter)\n  const [source, setSource] = useState(toEditSource)\n  const [youtube, setYoutube] = useState(toEditYoutube)\n  const [text, setText] = useState(toEditSongtext)\n  const [difficulty, setDifficulty] = useState(toEditDifficulty)\n\n  /* function to update firestore */\n  const handleUpdate = async (e: any) => {\n    e.preventDefault()\n\n    if ( !title || title.trim().length === 0 ) {\n      alert('Enter title text');\n      return;\n    }\n    if ( !text || text.trim().length === 0 ) {\n      alert('Enter song text');\n      return;\n    }\n    \n    const kTab: Partial<KTab> = {\n      title: title,\n      interpreter: interpreter,\n      source: source,\n      youtube: youtube,\n      text: text,\n      difficulty: difficulty,\n      updated: new Date()\n    }\n    \n    if (state.app?.currentUser ) {\n      const rests = state.app?.currentUser?.mongoClient(Config.clustername).db(Config.dbName).collection(Config.collection)\n      console.log('update', state.app?.currentUser);\n      \n      rests.updateOne({\"_id\": new BSON.ObjectID(id)}, kTab)\n        .then (()=>{\n          onClose(true)\n        })\n        .catch ((err) => {\n          alert(err)\n          onClose(false)\n        })\n    }\n    \n  }\n\n  return (\n    <Modal modalLabel='Edit Kalimba Tab' onClose={onClose} open={open}>\n      <Rating title=\"Set difficulty: \" rating={difficulty} onChange={setDifficulty} />\n      <form onSubmit={handleUpdate} className={styles.editSong}>\n        <input \n          type='text' \n          name='title' \n          placeholder=\"title\"\n          onChange={(e) => setTitle(e.target.value)} \n          value={title}/>\n        <input \n          type='text' \n          name='interpreter' \n          placeholder=\"interpreter\"\n          onChange={(e) => setInterpreter(e.target.value)} \n          value={interpreter}/>\n          \n        <textarea \n        onChange={(e) => setText(e.target.value)}\n        placeholder='Enter song text'\n        value={text}>{text}</textarea>\n\n        <input \n          type='url' \n          name='source' \n          placeholder=\"source\"\n          onChange={(e) => setSource(e.target.value)} \n          value={source}/>\n        <input \n          type='url' \n          name='youtube' \n          placeholder=\"youtube link\"\n          onChange={(e) => setYoutube(e.target.value)} \n          value={youtube}/>\n\n        <button type='submit'>Save</button>\n      </form> \n    </Modal>\n  )\n}\n\nexport default EditSong","import { faGlobe, faVideo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { FC, useContext, useMemo } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport { BSON } from \"realm-web\"\nimport { Config } from \"../../Config\"\nimport { KTab } from \"../../models/KTab\"\nimport MongoContext from \"../../context/MongoContext\"\nimport { Rating } from \"../rating/rating\"\nimport Modal from \"./../modal/modal\"\nimport styles from './song.module.css'\n\ntype Props = {\n    onClose: (reload: boolean) => void,\n    open: boolean,\n    song: KTab,\n    readOnly: Boolean\n}\n\nconst Song:FC<Props> = ({onClose, open, song, readOnly}) => {\n  const state = useContext(MongoContext);\n\n  /* function to remove text line markers */\n  const viewText = useMemo<string>(\n    () => {\n    return song.text.split(\"\\n\").map((line) => line.startsWith(\">\") ? line.substring(1, line.length) : line ).join(\"\\n\")\n    }, [song.text])\n\n  /* function to delete a document from mongodb */ \n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure to delete this song?')) return\n    \n    if (state.app?.currentUser ) {\n      const rests = state.app?.currentUser?.mongoClient(Config.clustername)?.db(Config.dbName).collection(Config.collection)\n      rests.deleteOne({_id: new BSON.ObjectID(song._id)})\n        .then(\n          () => onClose(true)\n        )\n        .catch((err) => alert(err))\n    }\n  }\n\n  return (\n    <Modal modalLabel={song.title} onClose={onClose} open={open}>\n      <div title=\"Interpreter\" className={styles.interpreter}>{ song.interpreter.length > 0 ? song.interpreter : 'unknown' }</div>\n      <Rating title=\"Difficulty: \" rating={song.difficulty} />\n      <div className={styles.song}>\n        <div className={styles.song_songtext}>{viewText}</div>\n        <div>\n          { song.source.length > 0 ? <div><FontAwesomeIcon icon={faGlobe} /> <a href={song.source}>{song.source}</a></div> : ''}\n          { song.youtube.length > 0 ? <div><FontAwesomeIcon icon={faVideo} /> <a href={song.youtube}>{song.youtube}</a></div> : ''}\n        </div>\n        <div className={styles.song_buttons}>\n        { !readOnly ? <>\n            <Button variant=\"outline-danger\" onClick={handleDelete}>Delete</Button> \n          </>\n          : '' }\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default Song","import React, { FC, useState } from 'react';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport { KTab } from '../models/KTab';\nimport EditSong from './editsong/editsong';\nimport { Rating } from './rating/rating';\nimport Song from './song/song';\n\ntype Props = {\n    onReload: () => void,\n    ktab: KTab,\n    readOnly: boolean\n}\nconst KTabCard: FC<Props> = ({ktab, readOnly, onReload}) => {\n\n    const [open, setOpen] = useState({edit:false, view:false})\n\n    const handleClose = (reload: boolean) => {\n        setOpen({edit:false, view:false})\n        if (reload) onReload()\n      }\n    \n    return (\n        <>\n        <ListGroup.Item\n            as=\"li\"\n            className=\"align-items-center d-flex\" style={{cursor:'pointer'}} >\n                <div onClick={() => setOpen({...open, view: true, edit: false})} \n                    className='d-flex justify-content-between'\n                    style={{width:'100%',alignItems:'center'}}\n                >\n                    <div >\n                        <div className='font-weight-bolder'>{ktab.title}</div>\n                        { ktab.interpreter.length > 0 ? \n                        <div className=\"text-muted font-italic\">{ktab.interpreter}</div> : '' }\n                    </div>\n                    <Rating title='' rating={ktab.difficulty} />\n                </div>\n                { !readOnly ? <Button variant=\"outline-primary\"\n                    onClick={() => setOpen({...open, view: false, edit: true})} \n                    className=\"ms-3\"\n                    style={{height:'100%'}}>Edit</Button> : '' }\n\n        </ListGroup.Item>\n            {open.view &&\n                <Song\n                    onClose={handleClose} \n                    song={ktab} \n                    open={open.view}\n                    readOnly={readOnly} />\n            }\n            {open.edit &&\n                <EditSong\n                    onClose={handleClose} \n                    toEditTitle={ktab.title}\n                    toEditInterpreter={ktab.interpreter}\n                    toEditSongtext={ktab.text}\n                    toEditSource={ktab.source}\n                    toEditYoutube={ktab.youtube}\n                    toEditDifficulty={ktab.difficulty}\n                    id={ktab._id}\n                    open={open.edit} />\n            }\n        </>\n    )\n}\n\nexport default KTabCard","import React from \"react\"\nimport { Spinner } from \"react-bootstrap\"\n\n\nconst Loading = () => {\n    return (\n        <>\n        <Spinner animation=\"border\" variant=\"primary\">\n            <span className=\"sr-only\"></span>\n        </Spinner> Loading...\n        </>\n    )\n}\n\nexport default Loading","import { FC, useMemo } from \"react\";\nimport styles from './pagination.module.css';\n\ntype Props = {\n    currentPage: number,\n    total: number,\n    countPerPage: number,\n    onChangePage: (page: number) => void,\n}\nexport const Pagination: FC<Props> = ({currentPage, total, countPerPage, onChangePage}) => {\n\n    const maxPage = useMemo(() => Math.floor(total / countPerPage), [total, countPerPage])\n\n    const pages = useMemo(() => \n        { \n            const result = []\n            const start = Math.max(0, currentPage - 3)\n            const end = Math.min(maxPage, currentPage + 3)\n            \n        for (let p = start; p <= end; p++) {\n            result.push(p)\n        }\n        return result\n    }, [maxPage, currentPage]\n    )\n\n\n    return (\n        <>\n        { total > 0 ? \n        <div className={styles.pagination}>\n            { currentPage > 0 ? <span onClick={() => onChangePage(currentPage-1)}>&laquo;</span> : '' }\n\n            { pages.map((page) =>\n                 <span key={'page-' + page} \n                    className={`${currentPage === page ? styles.active : ''}`}\n                    onClick={() => onChangePage(page)}\n                    >{page+1}</span> )\n            }\n\n            { currentPage < maxPage ? <span onClick={() => onChangePage(currentPage+1)}>&raquo;</span> : '' }\n        </div> \n        : '' }\n        </>\n    )\n}","\nimport * as Realm from 'realm-web'\n\nexport const apiKeyUser = () =>  {\n    const apiKey = process.env.REACT_APP_REALM_APIKEY_READALL;\n    if (!apiKey) {\n        throw new Error(\"Could not find a Realm Server API Key.\");\n    }\n    return Realm.Credentials.apiKey(apiKey);\n}\n\nexport const anonUser = () => {\n    return Realm.Credentials.anonymous()\n}\n\nexport const isReadOnly = (user: any) => {\n    return !user || user.profile.name === \"read_anonym\"\n}\n","import React, { useContext, useMemo } from 'react'\nimport { useEffect, useState } from 'react'\nimport { Button, Container, Form, ListGroup } from 'react-bootstrap'\nimport AddSong from '../components/addsong/addsong'\nimport { FindSong } from '../components/findsong/findsong'\nimport KTabCard from '../components/KTabCard'\nimport Loading from '../components/Loading'\nimport { Pagination } from '../components/pagination/pagination'\nimport { Config } from '../Config'\nimport { KTab } from '../models/KTab'\nimport MongoContext from '../context/MongoContext'\nimport { isReadOnly } from '../helpers/user'\n\nconst caseInsensitive = 'i';\n\ntype FunctionArgs = {\n    filter: any,\n    sort: any,\n    limit: number,\n    skip: number\n}\ntype FunctionResult = {\n    arg: any,\n    data: KTab[]\n}\n\nfunction Home () {\n    const state = useContext(MongoContext);\n    const [kTabs, setKtabs] = useState<KTab[]>([])\n    const [loading, setLoading] = useState(true)\n    const [openAddModal, setOpenAddModal] = useState(false)\n    const [searchText, setSearchText] = useState('')\n    const [total, setTotal ] = useState(0)\n    const [page, setPage ] = useState(0)\n    const [filter, setFilter] = useState<any>({})\n    const [reload, setReload] = useState(false)\n    const [sortField, setSortField] = useState('title')\n    const readOnly = useMemo(() => isReadOnly(state.user), [state.user]) \n\n    useEffect(() => {\n        if ( state.app?.currentUser?.isLoggedIn ) {\n            const rests = state.app?.currentUser?.mongoClient(Config.clustername).db(Config.dbName).collection(Config.collection)\n            const regex = new RegExp(searchText,caseInsensitive) \n            \n            let f = searchText.trim().length > 0 ? { \"$or\":  [ { title: {$regex: regex}}, { interpreter: {$regex: regex}}]} : {}\n           \n            setFilter(f)\n            rests.count(f)\n                .then((result) => setTotal(result))\n                .catch((err) => console.log(err))\n        }\n    }, [searchText, state.app?.currentUser, reload])\n\n    useEffect(() => {\n        if ( state.user?.isLoggedIn ) {\n            setLoading(true)\n            let sort = {}\n            switch (sortField) {\n                case 'title':\n                    sort = {title: 1, _id: 1}\n                    break;\n                case 'interpreter':\n                    sort = {interpreter: 1, title: 1, _id: 1}\n                    break;\n                case 'difficulty':\n                    sort = {difficulty: 1, title: 1, _id: 1}\n                    break;\n                case 'updated':\n                    sort = {updated: -1, _id: 1}\n                    break;\n                case 'difficulty_desc':\n                    sort = {difficulty: -1, title: 1, _id: 1}\n                    break;\n                default:\n                    sort = {title: 1, _id: 1}\n                    break;\n            }\n          \n            const args: FunctionArgs = { skip: page * Config.pageSize, limit: Config.pageSize, filter: filter, sort: sort }\n            state.user?.callFunction('skip_limit', args)\n                .then((result) => {\n                    setKtabs((result as FunctionResult).data)\n                })\n                .catch((err) => console.log(err))\n                .finally(() => setLoading(false))\n        }\n    }, [state.user, filter, page, reload, sortField])\n\n    const handleSearch = (t: string) => {\n        setPage(0)\n        setSearchText(t);\n    }\n\n    return (\n        <Container>\n            <FindSong onSearch={handleSearch} />\n            {loading && (\n                <div className=\"text-center\">\n                    <Loading />\n                </div>\n            )}\n            \n                <Container className='d-flex justify-content-between mt-3'>\n                    <div>Total: {total}</div>\n                    <div className='d-flex'>\n                        <Form.Label>sort by </Form.Label>\n                        <Form.Select aria-label=\"sort selection\" size=\"sm\" onChange={(e)=> setSortField(e.target.value)}>\n                            <option value=\"title\">title</option>\n                            <option value=\"interpreter\">interpreter</option>\n                            <option value=\"updated\">update time</option>\n                            <option value=\"difficulty\">difficulty</option>\n                            <option value=\"difficulty_desc\">difficulty desc</option>\n                        </Form.Select>\n                        { ! readOnly ? \n                            <Button size=\"sm\" className='ms-3' variant='outline-dark' onClick={() => setOpenAddModal(true)} >\n                                Add song\n                            </Button> \n                        : '' }\n                    </div>\n                </Container> \n               \n\n            <ListGroup as=\"ul\" className='mt-3 mb-3'>\n                {kTabs.map((ktab) => (\n                    <KTabCard key={ktab._id} ktab={ktab} readOnly={readOnly} onReload={() => setReload(!reload)} />\n                ))}\n            </ListGroup>\n            <Pagination currentPage={page} total={total} countPerPage={Config.pageSize} onChangePage={setPage}/>\n\n            {   openAddModal &&\n                <AddSong onClose={(r) => { setOpenAddModal(false); if (r) setReload(!reload)}} open={openAddModal}/>\n            }\n        </Container>\n    )\n}\n\nexport default Home","import React, { FC, useContext } from \"react\"\nimport { Formik } from 'formik'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport * as Realm from 'realm-web'\nimport { useState } from 'react'\nimport Loading from '../components/Loading'\nimport MongoContext from \"../context/MongoContext\"\n\nconst userSchema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required()\n})\n\ntype Props = {\n    onLogin: () => void\n}\n\nconst LogIn: FC<Props> = ({onLogin}) => {\n    const state = useContext(MongoContext);\n    const [loading, setLoading] = useState(false)\n\n    async function submitHandler (values: any) {\n        setLoading(true)\n\n        //login user and redirect to home\n        \n        if (state.app) {\n            console.log('login...');\n            state.app.currentUser?.logOut().then(\n                () =>{\n                    const credentials = Realm.Credentials.emailPassword(values.email, values.password);\n                    state.app?.logIn(credentials)\n                    .then((user) => {\n                        state.setUser(user);\n                        console.log('logged in...');\n                        onLogin()\n                    })\n                    .catch((err) => alert(err))\n                }\n            ).catch((err) => {\n                console.log('can not logout...');\n                console.log(err);\n            })\n        } else {\n            state.setUser(null)\n        }\n        setLoading(false)\n    }\n\n    return (\n        <Container className='d-flex justify-content-center mt-3'>\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: ''\n                }}\n\n                validationSchema={userSchema}\n\n                onSubmit={submitHandler}\n            >\n                {({errors, touched, handleSubmit, values, handleChange}) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        {loading && <Loading />}\n                        {!loading && (<div>\n                            <h1>Login</h1>\n                            <Form.Group>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" name=\"email\" value={values.email} onChange={handleChange} \n                                isValid={touched.email && !errors.email} />\n                                <Form.Control.Feedback>{errors.email}</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={values.password} onChange={handleChange} \n                                isValid={touched.password && !errors.password} />\n                                <Form.Control.Feedback>{errors.password}</Form.Control.Feedback>\n                            </Form.Group>\n                            <div className=\"text-center mt-2\">\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                            </div>\n                        </div>)}\n                    </Form>\n                )}\n            </Formik>\n        </Container>\n    )\n}\n\nexport default LogIn","import React, { FC, useContext, useMemo, useState } from \"react\"\nimport { Nav, Navbar } from \"react-bootstrap\"\nimport MongoContext from \"../context/MongoContext\"\nimport { isReadOnly } from \"../helpers/user\"\nimport LogIn from \"../pages/LogIn\"\n\n\nconst Navigation: FC = () => {\n    const state = useContext(MongoContext);\n    const readOnly = useMemo(() => isReadOnly(state.user), [state.user]) \n    const [showLogin, setShowLogin] = useState(false)\n    \n    \n    async function logout (e: any) {\n        e.preventDefault()\n        setShowLogin(false)\n        if (state.app?.currentUser) {\n            console.log('logout...');\n            \n            await state.app.currentUser.logOut().then(() => {\n                console.log('successfull logged out');\n                state.setUser(null)\n            }\n            ).catch((err)=> {\n                console.log(err);\n            })\n        }\n    }\n\n\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\" className=\"mx-2\">Tnx Kalimba Tabs</Navbar.Brand>\n\n                <Nav className=\"ms-auto\">\n                    { readOnly ? \n                        <Navbar>\n                            <Nav.Link href='# ' className=\"mx-2\" onClick={() => setShowLogin(true)}>\n                                Sign In\n                            </Nav.Link>\n                        </Navbar> \n                        : \n                        <Navbar>\n                            <Navbar.Text>\n                                {state.user?.profile.name || state.user?.profile.email}\n                            </Navbar.Text>\n                            <Nav.Link href='# ' className=\"mx-2\" onClick={logout}>\n                                Log out\n                            </Nav.Link>\n                        </Navbar> \n                    }\n                </Nav>\n            </Navbar>\n            { showLogin ? <LogIn onLogin={() => setShowLogin(false) } /> : ''}\n        </>\n    )\n}\n\nexport default Navigation","import React from \"react\"\nimport Home from \"./pages/Home\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MongoContext from './context/MongoContext'\nimport { useEffect, useState } from \"react\"\nimport * as Realm from 'realm-web'\nimport Navigation from \"./components/Navigation\";\nimport { apiKeyUser } from \"./helpers/user\";\n\nfunction App() {\n  const [user, setUser] = useState<Realm.User | null>(null)\n  const [app, setApp] = useState(new Realm.App({id: process.env.REACT_APP_REALM_APP_ID || ''}))\n\n  useEffect(() => {\n    async function init () {\n      if (!user) {\n        setUser(app.currentUser ? app.currentUser : await app.logIn(apiKeyUser())) \n      }\n    }\n\n    init();\n  }, [user, app])\n\n  return (\n    <>\n      <MongoContext.Provider value={{app, user, setUser, setApp}}>\n        <Navigation />\n        <Home />\n      </MongoContext.Provider>\n      \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modal_modalContainer__njSGn\",\"modal\":\"modal_modal__1zCPQ\",\"modal__head\":\"modal_modal__head__2A6uI\",\"modal__close\":\"modal_modal__close__39gZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"song\":\"song_song__3UfjZ\",\"interpreter\":\"song_interpreter__2aum8\",\"song_songtext\":\"song_song_songtext__nBJBj\",\"song_buttons\":\"song_song_buttons__22HKA\",\"song__deleteButton\":\"song_song__deleteButton__1lnj0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating__box\":\"rating_rating__box__jzyGw\",\"rating__checked\":\"rating_rating__checked__3Y5gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3nFKa\",\"disabled\":\"pagination_disabled__1WPUm\",\"active\":\"pagination_active__HNOaS\"};"],"sourceRoot":""}